(function ($) {
    $.fn.idleTimeout = function (options) {
        var defaults = {
//            idleTimeLimit: 1200,
//            redirectUrl: '/logout',
//            customCallback: false,
//            activityEvents: 'click keypress scroll wheel mousewheel mousemove',
//            enableDialog: true,
//            dialogDisplayLimit: 180,
//            dialogTitle: 'Session Expiration Warning',
//            dialogText: 'Because you have been inactive, your session is about to expire.',
//            dialogTimeRemaining: 'Time remaining',
//            dialogStayLoggedInButton: 'Stay Logged In',
//            dialogLogOutNowButton: 'Log Out Now',
//            errorAlertMessage: 'Please disable "Private Mode", or upgrade to a modern browser. Or perhaps a dependent file missing. Please see: https://github.com/marcuswestin/store.js', sessionKeepAliveTimer: 600
        },
        opts = $.extend(defaults, options),
        checkHeartbeat = 2,
        origTitle = document.title,
        //sessionKeepAliveUrl = window.location.href,
        sessionKeepAliveUrl = '/HRMISNET/Common/Main/KeepAlive.aspx',
        keepSessionAlive, activityDetector, idleTimer, remainingTimer, checkIdleTimeout, idleTimerLastActivity,
        startIdleTimer, stopIdleTimer, openWarningDialog, dialogTimer, checkDialogTimeout, startDialogTimer,
        stopDialogTimer, isDialogOpen, destroyWarningDialog, countdownDisplay, logoutUser, checkForIframes,
        includeIframes, attachEventIframe;
        keepSessionAlive = function () {
            if (opts.sessionKeepAliveTimer) {
                var keepSession = function () {
                    if (idleTimerLastActivity === store.get('idleTimerLastActivity')) $.get(sessionKeepAliveUrl)
                };
                setInterval(keepSession, (opts.sessionKeepAliveTimer * 1e3))
            }
        };
        activityDetector = function () {
            $('body').on(opts.activityEvents, function () {
                if (isDialogOpen() !== true) startIdleTimer()
            })
        };
        checkIdleTimeout = function () {
            var timeNow = $.now(),
            timeIdleTimeout = (store.get('idleTimerLastActivity') + (opts.idleTimeLimit * 1e3));
            if (timeNow > timeIdleTimeout) {
                if (!opts.enableDialog) {
                    logoutUser()
                } else if (opts.enableDialog && isDialogOpen() !== true) {
                    openWarningDialog(); startDialogTimer()
                }
            } else if (store.get('idleTimerLoggedOut') === true) {
                logoutUser()
            } else if (isDialogOpen() === true) { destroyWarningDialog(); stopDialogTimer() }
        }; startIdleTimer = function () {
            stopIdleTimer(); idleTimerLastActivity = $.now();
            store.set('idleTimerLastActivity', idleTimerLastActivity);
            idleTimer = setInterval(checkIdleTimeout, (checkHeartbeat * 1e3))
        }; stopIdleTimer = function () {
            clearInterval(idleTimer)
        };
        openWarningDialog = function () {
            var dialogContent = "<div id='idletimer_warning_dialog'><p>" + opts.dialogText + "</p><p style='display:inline'>" + opts.dialogTimeRemaining + ": <div style='display:inline' id='countdownDisplay'></div></p></div>";
            $(dialogContent).dialog({ buttons: [{ text: opts.dialogStayLoggedInButton, click: function () {
                destroyWarningDialog();
                stopDialogTimer();
                startIdleTimer()
            }
            }, {
                text: opts.dialogLogOutNowButton,
                click: function () {
                    logoutUser()
                }
            }],
                closeOnEscape: false,
                modal: true,
                title: opts.dialogTitle, open: function () {
                    $(this).closest('.ui-dialog').find('.ui-dialog-titlebar-close').hide()
                }
            });
            countdownDisplay();
            document.title = opts.dialogTitle
        };
        checkDialogTimeout = function () {
            var timeNow = $.now(),
        timeDialogTimeout = (store.get('idleTimerLastActivity') + (opts.idleTimeLimit * 1e3) + (opts.dialogDisplayLimit * 1e3));
            if ((timeNow > timeDialogTimeout) || (store.get('idleTimerLoggedOut') === true)) logoutUser()
        };
        startDialogTimer = function () {
            dialogTimer = setInterval(checkDialogTimeout, (checkHeartbeat * 1e3))
        };
        stopDialogTimer = function () {
            clearInterval(dialogTimer);
            clearInterval(remainingTimer)
        };
        isDialogOpen = function () {
            var dialogOpen = $("#idletimer_warning_dialog").is(":visible");
            if (dialogOpen === true) return true; return false
        };
        destroyWarningDialog = function () {
            $("#idletimer_warning_dialog").dialog('destroy').remove();
            document.title = origTitle
        };
        countdownDisplay = function () {
            var dialogDisplaySeconds = opts.dialogDisplayLimit, mins, secs;
            remainingTimer = setInterval(function () {
                mins = Math.floor(dialogDisplaySeconds / 60);
                if (mins < 10) mins = '0' + mins;
                secs = dialogDisplaySeconds - (mins * 60);
                if (secs < 10) secs = '0' + secs; $('#countdownDisplay').html(mins + ':' + secs);
                dialogDisplaySeconds -= 1
            }, 1e3)
        }; logoutUser = function () {
            store.set('idleTimerLoggedOut', true);
            if (opts.customCallback) opts.customCallback();
            if (opts.redirectUrl) window.location.href = opts.redirectUrl
        };
        checkForIframes = function () {
            var docReadyCheck, isDocReady;
            docReadyCheck = function () {
                if (document.readyState === "complete") {
                    clearInterval(isDocReady); includeIframes()
                }
            };
            isDocReady = setInterval(docReadyCheck, 1e3)
        };
        includeIframes = function () {
            var foundIframes = document.getElementsByTagName('iframe'), index, iframeItem;
            if (foundIframes.length > 0) for (index = 0; index < foundIframes.length; index++) {
                iframeItem = foundIframes.item(index);
                if (iframeItem.attachEvent) {
                    iframeItem.attachEvent('onload', attachEventIframe(index))
                } else iframeItem.addEventListener('load', attachEventIframe(index), false)
            }
        };
        attachEventIframe = function (index) {
            var iframe = $('iframe:eq(' + index + ')').contents().find('html');
            iframe.on(opts.activityEvents, function (event) {
                $('body').trigger(event)
            })
        }; return this.each(function () {
            if (store.enabled) {
                idleTimerLastActivity = $.now();
                store.set('idleTimerLastActivity', idleTimerLastActivity);
                store.set('idleTimerLoggedOut', false)
            } else alert(opts.errorAlertMessage); activityDetector();
            keepSessionAlive();
            startIdleTimer();
            checkForIframes()
        })
    }
} (jQuery))